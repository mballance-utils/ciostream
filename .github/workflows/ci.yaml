
on:
  push:
  pull_request:
    types: [opened, synchronize, edited, reopened]
  workflow_dispatch:

jobs:

    linux:
      name: ciostream ${{ matrix.arch }} ${{ matrix.platform }} ${{ matrix.spec }}
      runs-on: ubuntu-latest
      strategy: 
        matrix:
          include:
          - { platform: manylinux1, arch: x86_64, spec: cp37 }
          - { platform: manylinux2014, arch: x86_64, spec: cp310 }

      steps:
      - name: checkout
        uses: actions/checkout@v2

        #      - name: Configure Docker
        #        uses: docker/setup-
      - name: Build/Test Package
        env:
          CIBW_ARCHS: all
          CIBW_BUILD: ${{ matrix.spec }}-manylinux_${{ matrix.arch }}
          CIBW_BUILD_VERBOSITY: 1
        run: |
          set -eux
          python -V 
          python -m pip install -U --user cibuildwheel Cython
          python -m cibuildwheel --platform auto --output-dir dist .

    macos:
      name: ciostream ${{ matrix.spec }}
      runs-on: ${{ matrix.runs_on || 'macos-10.15' }}
      strategy:
        matrix:
          include:
          - spec: cp36-macosx_x86_64
      steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Build/Test Package
        env:
          CIBW_BUILD: ${{ matrix.spec }}
          CIBW_BUILD_VERBOSITY: 1
          MACOX_DEPLOYMENT_TARGET: ${{ matrix.deployment_target || '10.9' }}
          SDKROOT: ${{ matrix.sdkroot || 'macosx' }}
        run: |
          python3 -V
          python3 -m pip install -U --user cibuildwheel Cython
          python3 -m cibuildwheel --platform auto --output-dir dist .

    windows:
      name: ciostream ${{ matrix.platform }} ${{ matrix.python_arch }} ${{ matrix.spec }}
      runs-on: ${{ matrix.platform }}
      strategy:
        matrix:
          include:
          - platform: windows-2016
            build_arch: x64
            python_arch: x64
            spec: 3.6
      steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Install python ${{ matrix.spec }}
        uses: actions/setup-python@v2
        with:
          architecture: ${{ matrix.python_arch }}
          python-version: ${{ matrix.spec }}

      - name: Build/Test Package
        shell: bash
        run: |
          python -V
          python -m pip install Cython wheel

          python setup.py build bdist_wheel

