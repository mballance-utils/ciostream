
on:
  push:
  pull_request:
    types: [opened, synchronize, edited, reopened]
  workflow_dispatch:

jobs:
    sdist:
      name: sdist
      runs-on: ubuntu-latest
      steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x
      - name: Build sdist
        run: |
          export BUILD_NUM=$GITHUB_RUN_ID
          python -V
          python -m pip install twine Cython
          python setup.py sdist
      - name: Publish to PyPi
        if: startsWith(github.ref, 'refs/heads/main')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}

    linux:
      name: ciostream ${{ matrix.arch }} ${{ matrix.platform }} ${{ matrix.spec }}
      runs-on: ubuntu-latest
      strategy: 
        matrix:
          include:
          - { platform: manylinux1, arch: x86_64, spec: cp36 }
          - { platform: manylinux1, arch: x86_64, spec: cp37 }
          - { platform: manylinux1, arch: x86_64, spec: cp38 }
          - { platform: manylinux1, arch: x86_64, spec: cp39 }
          - { platform: manylinux2014, arch: x86_64, spec: cp310 }

      steps:
      - name: checkout
        uses: actions/checkout@v2

        #      - name: Configure Docker
        #        uses: docker/setup-
      - name: Build/Test Package
        env:
          CIBW_ARCHS: all
          CIBW_BUILD: ${{ matrix.spec }}-manylinux_${{ matrix.arch }}
          CIBW_BEFORE_BUILD: pip install Cython
          CIBW_BUILD_VERBOSITY: 1
          CIBW_ENVIRONMENT_PASS_LINUX: BUILD_NUM="$GITHUB_RUN_ID"
        run: |
          set -eux
          python3 -V 
          python3 -m pip install -U --user cibuildwheel
          python3 -m cibuildwheel --platform auto --output-dir dist .
          ls dist
      - name: Publish to PyPi
        if: startsWith(github.ref, 'refs/heads/main')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}

    macos:
      name: ciostream ${{ matrix.spec }}
      runs-on: ${{ matrix.runs_on || 'macos-10.15' }}
      strategy:
        matrix:
          include:
          - spec: cp36-macosx_x86_64
          - spec: cp37-macosx_x86_64
          - spec: cp38-macosx_x86_64
          - spec: cp39-macosx_x86_64
          - spec: cp310-macosx_x86_64
      steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Build/Test Package
        env:
          CIBW_BUILD: ${{ matrix.spec }}
          CIBW_BEFORE_BUILD: pip install Cython twine
          CIBW_BUILD_VERBOSITY: 1
          MACOX_DEPLOYMENT_TARGET: ${{ matrix.deployment_target || '10.9' }}
          SDKROOT: ${{ matrix.sdkroot || 'macosx' }}
        run: |
          export BUILD_NUM=$GITHUB_RUN_ID
          python3 -V
          python3 -m pip install -U --user cibuildwheel
          python3 -m cibuildwheel --platform auto --output-dir dist .
          ls dist
      - name: Publish to PyPi
        if: startsWith(github.ref, 'refs/heads/main')
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        shell: bash
        run: |
            python -m twine upload dist/*.whl

    windows:
      name: ciostream ${{ matrix.platform }} ${{ matrix.python_arch }} ${{ matrix.spec }}
      runs-on: ${{ matrix.platform }}
      strategy:
        matrix:
          include:
          - platform: windows-2016
            build_arch: x64
            python_arch: x64
            spec: 3.6
          - platform: windows-2016
            build_arch: x64
            python_arch: x64
            spec: '3.10'
          - platform: windows-2016
            build_arch: win32
            python_arch: x86
            spec: 3.6
          - platform: windows-2016
            build_arch: win32
            python_arch: x86
            spec: '3.10'
      steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Install python ${{ matrix.spec }}
        uses: actions/setup-python@v2
        with:
          architecture: ${{ matrix.python_arch }}
          python-version: ${{ matrix.spec }}

      - name: Build/Test Package
        shell: bash
        run: |
          export BUILD_NUM=$GITHUB_RUN_ID
          python -V
          python -m pip install Cython wheel twine
          python setup.py build bdist_wheel
          ls dist

      - name: Publish to PyPi
        if: startsWith(github.ref, 'refs/heads/main')
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        shell: bash
        run: |
            python -m twine upload dist/*.whl

